문제 6-1
Q) 예제 프로그램에서는 MessageBox 클래스（리스트 6—3）와 UnderlinePen 클래스（리스트 6—4）에 같은 동작 을 하는 createCopy 메소드가 정의되어 있습니다.
   같은 동작을 하는 메소드가 한 프로그램에 여러 개 정의되어 있는 것은 관리상 바람직하지 않으므로, 이 메소드를 공유하고 싶습니다.
   어떻게 해야 할까요?

A) 공통적인 기능을 해야하는 메소드이므로 공통적인 기능을 수행하는 추상클래스를 만들어 준다.

    public abstract class CommonAbstract {
        public final Product createCopy() {
            Product p = null;
            try {
                p = (Product) clone();
            } catch (CloneNotSupportedException e) {
                e.printStackTrace();
            }
            return p;
        }
    }


문제 6-2
Q) 예제 프로그램에서는 Java 의 clone 으로 인스턴스 복사를 구현했는데, 복사 생성자로 인스턴스를 복사하는 방법도 있습니다.
   복사 생성자란 ‘같은 클래스의 인스턴스를 인수로 가지고, 인스턴스 생성 시 필드를 복사하는 생성자’를 말합니다.
   예를 들어, 예제 프로그램의 MessageBox 클래스（리스트 6-3）에 복사 생성자를 정의하면 다음과 같습니다.

   // 복사 생성자
   public MessageBox（MessageBox prototype） {
       this.decochar = prototype.decochar;
   }
   복사 생성자를 이용해서 인스턴스를 복사하도록 예제 프로그램을 다시 작성하세요.

A)